=============================
reStructuredText 常用语法速查
=============================

.. contents::
   :local:
   :depth: 2


.. _my-reference-label:

段落与换行
===========
普通段落：直接写文字，段落之间空一行。

换行：使用 ``\\`` 或直接回车换行后缩进。

强调文本
=========

*斜体*：使用单个星号 ``*`` 包围。

**粗体**：使用双星号 ``**`` 包围。

``等宽字体``：使用反引号 `` ` `` 包围。

标题格式
========
在 reStructuredText（reST） 中，标题层级是通过在标题文字上下使用不同的符号来表示的，而不是像 Markdown 那样用 #。
你可以使用多种符号来表示不同的层级，但关键是 **在整个文档中保持一致**,意思就是你也可以使用####当做一级标题，使用====作为二级标题，没有强制规定。

:: 
   
   ====================
   一级标题（通常是文档标题）
   ====================

   二级标题
   ========

   三级标题
   --------

   四级标题
   ^^^^^^^^

   五级标题
   """"""""


有序与无序列表
==============

无序列表：

- 项目 1
- 项目 2
  - 子项目

有序列表：

1. 第一步
2. 第二步
   a. 子步骤 A
   b. 子步骤 B

定义列表：

关键字 1
  说明内容 1
关键字 2
  说明内容 2

超链接
======

外部链接：

`OpenAI <https://www.openai.com>`_

引用链接：

链接_ 

.. _链接: https://example.com

图片插入
========

.. image:: https://www.example.com/image.png
   :alt: 示例图片
   :width: 200px
   :align: center

代码块
======

行内代码：
使用 ``code`` 这种。
或者使用 :code:`print("Hello")` 这种。

多行代码块：

.. code-block:: python

   def hello():
       print("Hello, world")

或者缩进方式（不推荐用于复杂代码）：

::

   echo "Hello"
   def hello():
      print("Hello, world")


表格
====

简单表格（仅适用于简单列）：

======  ======
姓名    年龄
------  ------
张三    28
李四    32
======  ======

grid 表格（推荐使用）： 这里一定要注意，相对比与Markdown格式的表格，这里的表格一定要对其如正确的表格和错误的表格

正确的显示：

+------------+--------+
| 姓名       | 年龄   |
+============+========+
| 张三       | 28     |
+------------+--------+
| 李四       | 32     |
+------------+--------+
| 李四四四   |  32    |
+------------+--------+

正确的显示2 ：

+------------+--------+
| 姓名       | 年龄   |
+============+========+
| 张三       | 28     |
+------------+--------+
| 李四       | 32     |
+------------+--------+
|  李四四四  |  32    |
+------------+--------+

错误的显示以代码形式显示

::

   +------------+--------+     // 在这里可以看到姓名栏是12个字符宽度
   | 姓名       | 年龄   |
   +============+========+
   | 张三       | 28     |
   +------------+--------+
   | 李四       | 32     |
   +------------+--------+
   |  李四四四 |  32    |       //11个字符 //一个中文字符占两个英文字符的宽度
   +------------+--------+

如果你不想手动对齐，可以用 List Table（列表表格），更简单，但是注意此种类型不支持单元格合并，列表宽度不可控，渲染的样式固定，不支持表头分组：

.. list-table:: 人员信息
   :header-rows: 1

   * - 姓名
     - 年龄
   * - 张三
     - 28
   * - 李四
     - 32
   * - 欧阳波波
     - 15


引用与注释
==========

引用：

    这是一个缩进的段落，
    用作引用或引导语。

注释：

.. 注释内容不会显示在最终文档中

提示块（需要 Sphinx 支持）
============================

.. note::

   这是一个提示块（Note）。

.. warning::

   这是一个警告块（Warning）。

.. important::

   这是一个重要提示（Important）。

.. tip::

   这是一个技巧提示（Tip）。

toctree 目录（用于 Sphinx 文档）
==================================

.. toctree::
   :maxdepth: 2
   :caption: 文档目录

   intro
   usage
   api_reference


索引与标签
===========

.. _标签名:

在文中跳转：使用 ``跳转 <标签名_>``

添加索引：

.. index:: 关键字1, 关键字2

内部交叉引用（Sphinx 专用）：
===============================

    参见 :ref:`my-reference-label` 章节。 这个在函数描述中引用形参类型时，可以通过交叉引用让用户可以点击对应的连接直接跳转到对应的结构体

使用说明：

::

   .. _my-reference-label:     // 这里是标签定义

   我的目标章节
   ------------

   这里是正文内容……

    参见 :ref:`my-reference-label` 章节。    // 这里是引用标签

数学公式（Sphinx 扩展）
=========================

行内公式： :math:`E=mc^2`

块级公式：

.. math::

   a^2 + b^2 = c^2

